# Default values for mysql.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: mysql
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "8.0.29"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
names:
  statefulset: mysql-statefulset
  service: mysql-service
  secret: mysql-secret
appName: "market-analysis-webapp"
annotations:
  argocd.argoproj.io/sync-wave: "1"

updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}
    # partition: 0

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: None
  port: 3306

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

envFrom:
  - secretRef:
      name: mysql-secret

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: mysql-persistent-storage
    mountPath: "/var/lib/mysql"
    # readOnly: true

persistentVolume:
  enabled: true
  name: mysql-persistent-storage
  accessModes: ReadWriteOnce
  size: 10Gi
  storageClass: ""

nodeSelector: {}

tolerations: []

affinity: {}

secretType: Opaque

# TODO: クラウドのシークレットマネージャを使う
secretData:
  MYSQL_ROOT_PASSWORD: cm9vdHBAc3N3MHJk
  MYSQL_DATABASE: bWFya2V0X2FuYWx5c2lzX3dlYmFwcF9kYg==
  MYSQL_USER: bWF1c2Vy
  MYSQL_PASSWORD: cEBzc3cwcmQ=
